openapi: 3.0.1
x-stoplight:
  id: s9knq82ok7m9u
info:
  title: mxp-icadsistemi-agents
  description: ICAD Sistemi Agents Rest API - Public API
  version: '2024-09-23T13:48:41Z'
servers:
  - url: 'https://mxp-agents-api.prod.icadsistemi.com'
    description: production
  - url: 'https://mxp-agents-api.dev.icadsistemi.com'
    description: development
paths:
  /health:
    head:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                x-examples:
                  Example 1:
                    statusCode: 200
      operationId: head-health
      description: |-
        API without security check just for checking connection with the API Server.

        No body is requested
      summary: Health Check
  /installer/agents:
    get:
      responses:
        '200':
          description: |-
            200 response. 

            It's actually a dictionary where agents_name is the key and the object the value. Every agent has its properties.
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    datacollection:
                      base_path: IS.DC
                      service_name: datacollection
                      needs_ca: true
                      rename_license: false
                      filename: datacollection
                properties:
                  agents_name:
                    type: object
                    x-stoplight:
                      id: cbw94n1flw8q7
                    description: Key of the dictionary (es. datacollection)
                    properties:
                      base_path:
                        type: string
                        description: The folder on Windows where the agents has to be installed
                      service_name:
                        type: string
                        description: The name of the service to create on Windows
                      needs_ca:
                        type: boolean
                        description: 'If enabled, the agents needs the cacert.pem since it need it for https to work'
                      rename_license:
                        type: boolean
                        description: 'If enabled, the downloaded licence needs to be renamed based on the environment.'
                      filename:
                        type: string
                        description: The filename that the downloaded agents has to have
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
      security:
        - Cognito: []
      operationId: installer-agents
      description: API used by the Agents Installer to retrieve a list of agents that could be installed
      summary: Download Agents List
  /installer/agents/download:
    get:
      parameters:
        - name: x-agent-name
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/octet-stream:
              schema:
                type: object
                properties: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
      security:
        - Cognito: []
      operationId: installer-agents-download
      description: ''
      summary: Download Agent
  /installer/license:
    get:
      parameters:
        - name: x-fuelstation-code
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/octet-stream:
              schema:
                type: object
                properties: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
      security:
        - Cognito: []
      operationId: installer-license
      description: |-
        API used to retrieve the licence for the FuelStation sent with the header x-fuelstation-code.

        The FuelStation needs to be enabled in order to have this licence available for 24 hours. 

        The 200 OK body is an encrypted binary that needs to be saved as file .key.
      summary: Download FuelStation License
  /installer/versions:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    versions:
                      - vendor: iscontroller
                        filename: iscontrollerprod-1.0.0.exe
                        version: 1.0.0
                        automation: all
                        name: Controller
                        category: iscontroller
                properties:
                  versions:
                    type: array
                    description: List of versions
                    items:
                      type: object
                      properties:
                        vendor:
                          type: string
                          description: The vendor of the agent
                        filename:
                          type: string
                          description: The filename to download from our block storage
                        version:
                          type: string
                          description: The version in semantic form
                        automation:
                          type: string
                          description: The automation where this agent can be installed
                        name:
                          type: string
                          description: The name of the agent
                        category:
                          type: string
                          description: The agent_name of the agents API
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
      security:
        - Cognito: []
      operationId: installer-versions
      summary: Download Versions List
      description: API used by the Agents Installer to retrieve a list of the versions of every agent.
  /manage/update:
    get:
      parameters:
        - name: vendor
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content: {}
        '204':
          description: 204 response
          content: {}
        '300':
          description: 300 response
          content: {}
        '400':
          description: 400 response
          content: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
        '404':
          description: 404 response
          content: {}
        '422':
          description: 422 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - Cognito: []
  /manage/update/gilbarco:
    get:
      responses:
        '200':
          description: 200 response
          content: {}
        '201':
          description: 201 response
          content: {}
        '202':
          description: 202 response
          content: {}
        '400':
          description: 400 response
          content: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - Cognito: []
  /manage/update/gilbarcobeta:
    get:
      responses:
        '200':
          description: 200 response
          content: {}
        '201':
          description: 201 response
          content: {}
        '202':
          description: 202 response
          content: {}
        '400':
          description: 400 response
          content: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - Cognito: []
  /manage/update/iscontroller:
    get:
      responses:
        '200':
          description: 200 response
          content: {}
        '201':
          description: 201 response
          content: {}
        '202':
          description: 202 response
          content: {}
        '400':
          description: 400 response
          content: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - Cognito: []
  /manage/update/iscontrollerbeta:
    get:
      responses:
        '200':
          description: 200 response
          content: {}
        '201':
          description: 201 response
          content: {}
        '202':
          description: 202 response
          content: {}
        '400':
          description: 400 response
          content: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - Cognito: []
  /manage/update/loyalty:
    get:
      responses:
        '200':
          description: 200 response
          content: {}
        '201':
          description: 201 response
          content: {}
        '202':
          description: 202 response
          content: {}
        '400':
          description: 400 response
          content: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - Cognito: []
  /manage/update/loyaltybeta:
    get:
      responses:
        '200':
          description: 200 response
          content: {}
        '201':
          description: 201 response
          content: {}
        '202':
          description: 202 response
          content: {}
        '400':
          description: 400 response
          content: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - Cognito: []
  /manage/update/wayne:
    get:
      responses:
        '200':
          description: 200 response
          content: {}
        '201':
          description: 201 response
          content: {}
        '202':
          description: 202 response
          content: {}
        '400':
          description: 400 response
          content: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - Cognito: []
  /manage/update/waynebeta:
    get:
      responses:
        '200':
          description: 200 response
          content: {}
        '201':
          description: 201 response
          content: {}
        '202':
          description: 202 response
          content: {}
        '400':
          description: 400 response
          content: {}
        '401':
          description: 401 response
          content: {}
        '403':
          description: 403 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - Cognito: []
  /startup/logs:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                x-examples:
                  Example 1:
                    key: aaaaabbbbb123452148vnivososooooo
        '401':
          description: 401 response
          content: {}
      security:
        - Cognito: []
      operationId: get-startup-logs
      summary: Get Log API Key
      description: API used to retrieve DataDog API Key
components:
  securitySchemes:
    Cognito:
      type: oauth2
      flows:
        password:
          tokenUrl: ''
          refreshUrl: ''
          scopes: {}
